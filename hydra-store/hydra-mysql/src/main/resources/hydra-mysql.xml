<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright jd
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd" default-autowire="byName">

    <!--数据库层  自己默认提供一个属性配置-->
    <bean id="propertyConfigurer-mysql" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1" />
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <value>classpath:mysql.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSourceStoreMysql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters -->
        <!--<property name="filters" value="stat" />-->
    </bean>

    <bean id="transactionManagerStoreMysql" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceStoreMysql"/>
    </bean>
    <bean id="sqlSessionFactoryStoreMysql" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceStoreMysql"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config-store-mysql.xml"/>
    </bean>
    <bean id="sqlSessionTemplateStoreMysql" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryStoreMysql"/>
    </bean>

    <bean id="traceMapper" class="com.jd.bdp.hydra.mysql.persistent.dao.impl.TraceMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplateStoreMysql"/>
    </bean>

    <bean id="spanMapper" class="com.jd.bdp.hydra.mysql.persistent.dao.impl.SpanMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplateStoreMysql"/>
    </bean>

    <bean id="annotationMapper" class="com.jd.bdp.hydra.mysql.persistent.dao.impl.AnnotationMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplateStoreMysql"/>
    </bean>

    <bean id="insertService" class="com.jd.bdp.hydra.mysql.service.impl.InsertServiceImpl" />
    <bean id="queryService" class="com.jd.bdp.hydra.mysql.service.impl.QueryServiceImpl" />
</beans>